server:
  port: 8080
  servlet:
    context-path: /seckill

spring:
  application:
    name: seckill-system
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    listener:
      simple:
        acknowledge-mode: manual
        concurrency: 4
        max-concurrency: 16
  
  # 数据源配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,log4j
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
  
  # Redis配置
  redis:
    host: localhost
    port: 6379
    password: 
    database: 0
    timeout: 3000ms
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0

# MyBatis配置
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.seckill.system.entity
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    lazy-loading-enabled: true
    aggressive-lazy-loading: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 数据库配置
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: root

# 限流配置
seckill:
  rate-limit:
    default-strategy:
      algorithm: sliding-window
      window-size: 60
      limit: 100
      capacity: 100
      rate: 10.0
      tokens: 1
      enable-user-limit: true
      user-limit-multiplier: 0.1
      enable-ip-limit: true
      ip-limit-multiplier: 0.2
    products:
      "1":  # 商品ID为1的限流策略
        algorithm: sliding-window
        window-size: 30
        limit: 50
        enable-user-limit: true
        user-limit-multiplier: 0.05
      "2":  # 商品ID为2的限流策略
        algorithm: token-bucket
        capacity: 30
        rate: 3.0
        tokens: 1
    users:
      "1001":  # 用户ID为1001的限流策略
        algorithm: sliding-window
        window-size: 60
        limit: 5
      "1002":  # 用户ID为1002的限流策略
        algorithm: token-bucket
        capacity: 10
        rate: 1.0
        tokens: 1
    ips:
      "192.168.1.100":  # IP为192.168.1.100的限流策略
        algorithm: sliding-window
        window-size: 60
        limit: 20
      "10.0.0.1":  # IP为10.0.0.1的限流策略
        algorithm: token-bucket
        capacity: 15
        rate: 2.0
        tokens: 1
    apis:
      "/seckill/do":  # 秒杀接口的限流策略
        algorithm: sliding-window
        window-size: 30
        limit: 200
        enable-user-limit: true
        user-limit-multiplier: 0.1
      "/async-seckill/submit":  # 异步秒杀接口的限流策略
        algorithm: token-bucket
        capacity: 100
        rate: 20.0
        tokens: 1

# 日志配置
logging:
  level:
    com.seckill.system: debug
    org.springframework.cache: trace
    org.springframework.orm.jpa: debug
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/seckill-system.log
