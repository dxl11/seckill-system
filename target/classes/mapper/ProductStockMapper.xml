<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seckill.system.dao.ProductStockDao">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.seckill.system.entity.ProductStock">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="product_id" property="productId" jdbcType="BIGINT"/>
        <result column="available_stock" property="availableStock" jdbcType="INTEGER"/>
        <result column="locked_stock" property="lockedStock" jdbcType="INTEGER"/>
        <result column="total_stock" property="totalStock" jdbcType="INTEGER"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, product_id, available_stock, locked_stock, total_stock, version, create_time, update_time
    </sql>

    <!-- 根据商品ID查询库存信息 -->
    <select id="selectByProductId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM product_stock
        WHERE product_id = #{productId}
    </select>

    <!-- 扣减库存 -->
    <update id="decreaseStock" parameterType="map">
        UPDATE product_stock
        SET available_stock = available_stock - #{quantity},
            update_time = NOW()
        WHERE product_id = #{productId}
          AND available_stock >= #{quantity}
    </update>

    <!-- 增加库存 -->
    <update id="increaseStock" parameterType="map">
        UPDATE product_stock
        SET available_stock = available_stock + #{quantity},
            update_time = NOW()
        WHERE product_id = #{productId}
    </update>

    <!-- 带乐观锁的库存扣减 -->
    <update id="decreaseStockWithVersion" parameterType="map">
        UPDATE product_stock
        SET available_stock = available_stock - #{quantity},
            version = version + 1,
            update_time = NOW()
        WHERE product_id = #{productId}
          AND available_stock >= #{quantity}
          AND version = #{version}
    </update>

    <!-- 带乐观锁的库存扣减（自动获取版本号） -->
    <update id="decreaseStockWithVersionAuto" parameterType="map">
        UPDATE product_stock
        SET available_stock = available_stock - #{quantity},
            version = version + 1,
            update_time = NOW()
        WHERE product_id = #{productId}
          AND available_stock >= #{quantity}
    </update>

    <!-- 带乐观锁的库存增加 -->
    <update id="increaseStockWithVersion" parameterType="map">
        UPDATE product_stock
        SET available_stock = available_stock + #{quantity},
            version = version + 1,
            update_time = NOW()
        WHERE product_id = #{productId}
          AND version = #{version}
    </update>

    <!-- 获取商品库存版本号 -->
    <select id="getVersion" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT version
        FROM product_stock
        WHERE product_id = #{productId}
    </select>

    <!-- 锁定库存行（悲观锁） -->
    <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM product_stock
        WHERE product_id = #{productId}
        FOR UPDATE
    </select>

</mapper>

